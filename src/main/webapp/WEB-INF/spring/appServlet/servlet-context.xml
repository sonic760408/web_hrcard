<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

    <!-- xmlns:beans="http://www.springframework.org/schema/beans" -->
    <!-- DispatcherServlet Context: defines this servlet's request-processing 
    infrastructure -->

    <!-- Enables the Spring MVC @Controller programming model -->
    <mvc:annotation-driven />

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving 
    up static resources in the ${webappRoot}/resources directory -->
    <mvc:resources mapping="/resources/**" location="/resources/" />

    <!-- Resolves views selected for rendering by @Controllers to .jsp resources 
    in the /WEB-INF/views directory -->
    <bean
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
    </bean>
    

    <!-- Configure to plugin JSON as request and response in method handler -->
    <bean
        class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="jsonMessageConverter" />
            </list>
        </property>
    </bean>
        
    <!-- Configure bean to convert JSON to POJO and vice versa -->
    <bean id="jsonMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
    </bean>
	
    <!-- Create DataSource Bean -->
	 
    <bean id="dbDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="java:DefaultDS"/>
    </bean>
	 
    <!-- using JEE namespace for lookup -->
    <!-- 
    <jee:jndi-lookup id="dbDataSource" jndi-name="jdbc/MyLocalDB"
                  expected-type="javax.sql.DataSource" />
    -->
    
    <!-- setting NamedParameterJdbcTemplate-->
    <bean class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate" id="namedParameterJdbcTemplate">
        <constructor-arg ref="dbDataSource"/>
        <!-- <property name="dataSource" ref="dbDataSource"></property> -->
    </bean>
    
    <!--Enabled @Transactional-->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
    
    <!-- 設定Transactional 以及jdbi -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" p:dataSource-ref="dbDataSource"/>

    <!-- create service bean for autowire -->
    <bean id="hrcardrecService" class="com.tintin.service.HRCardRecServiceImpl" />
    
    <!-- create service bean for autowire -->
    
    <bean id="hrcardrecdao" class="com.tintin.dao.HRCardRecDaoImpl">
        <!--<property name="transactionManager" ref="transactionManager"/> -->
    </bean>
    
    
    <!-- <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource" p:basenames="messages/validation" /> -->
    
    <!-- validator -->
    <!--
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="validationMessageSource">
            <ref bean="messageSource"/>
        </property>
    </bean>
    -->
    
    <!-- search beans -->
    <context:component-scan base-package="com.tintin.controller" />
    
</beans>
